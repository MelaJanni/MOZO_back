{
  "firebase_fcm_integration": {
    "overview": "Complete Firebase Cloud Messaging (FCM) integration for real-time notifications",
    "backend_setup": {
      "service_created": "FirebaseService.php - Complete FCM service with OAuth 2.0 authentication",
      "controller_created": "NotificationController.php - API endpoints for notification management",
      "routes_added": "API routes for all notification functionalities",
      "configuration": {
        "config_file": "config/services.php",
        "firebase_credentials": "storage/app/firebase/mozoqr-7d32c-firebase-adminsdk-fbsvc-0a90bdb0a0.json",
        "environment_variables_needed": [
          "FIREBASE_PROJECT_ID=mozoqr-7d32c",
          "FIREBASE_SERVER_KEY=your_server_key_here"
        ]
      }
    },
    "api_endpoints": {
      "base_url": "https://your-domain.com/api",
      "authentication": "Bearer token required (Laravel Sanctum)",
      "endpoints": [
        {
          "method": "POST",
          "url": "/admin/notifications/send-to-all",
          "description": "Send notification to all users",
          "payload": {
            "title": "string (required, max: 255)",
            "body": "string (required, max: 1000)",
            "data": "object (optional) - Custom data payload"
          },
          "example_request": {
            "title": "¡Nueva promoción disponible!",
            "body": "Descubre nuestro nuevo menú con descuentos especiales",
            "data": {
              "type": "promotion",
              "promotion_id": "12345",
              "action": "view_menu"
            }
          },
          "example_response": {
            "success": true,
            "message": "Notification sent to all users successfully",
            "result": [
              {
                "success": 150,
                "failure": 2,
                "canonical_ids": 0,
                "multicast_id": 123456789
              }
            ]
          }
        },
        {
          "method": "POST",
          "url": "/admin/notifications/send-to-user",
          "description": "Send notification to specific user",
          "payload": {
            "user_id": "integer (required)",
            "title": "string (required, max: 255)",
            "body": "string (required, max: 1000)",
            "data": "object (optional)"
          },
          "example_request": {
            "user_id": 123,
            "title": "Tu pedido está listo",
            "body": "El camarero está preparando tu mesa. ¡Te esperamos!",
            "data": {
              "type": "order_ready",
              "table_id": "45",
              "order_id": "789"
            }
          },
          "example_response": {
            "success": true,
            "message": "Notification sent to user successfully",
            "result": [
              {
                "name": "projects/mozoqr-7d32c/messages/0:1234567890",
                "token": "device_token_here"
              }
            ]
          }
        },
        {
          "method": "POST",
          "url": "/admin/notifications/send-to-device",
          "description": "Send notification to specific device token",
          "payload": {
            "token": "string (required) - FCM device token",
            "title": "string (required, max: 255)",
            "body": "string (required, max: 1000)",
            "data": "object (optional)"
          },
          "example_request": {
            "token": "fGc1eR2..._device_token_here",
            "title": "Bienvenido a MOZO",
            "body": "¡Gracias por descargar nuestra app!",
            "data": {
              "type": "welcome",
              "user_type": "customer"
            }
          }
        },
        {
          "method": "POST",
          "url": "/admin/notifications/send-to-topic",
          "description": "Send notification to topic subscribers",
          "payload": {
            "topic": "string (required) - Topic name",
            "title": "string (required, max: 255)",
            "body": "string (required, max: 1000)",
            "data": "object (optional)"
          },
          "example_request": {
            "topic": "restaurant_updates",
            "title": "Nuevo horario de atención",
            "body": "A partir del lunes estaremos abiertos hasta las 23:00",
            "data": {
              "type": "schedule_update",
              "new_hours": "08:00-23:00"
            }
          }
        },
        {
          "method": "POST",
          "url": "/admin/notifications/subscribe-to-topic",
          "description": "Subscribe device tokens to topic",
          "payload": {
            "tokens": "array (required) - Array of FCM tokens",
            "topic": "string (required) - Topic name"
          },
          "example_request": {
            "tokens": ["token1", "token2", "token3"],
            "topic": "restaurant_updates"
          }
        },
        {
          "method": "POST",
          "url": "/device-token",
          "description": "Store device token for user",
          "payload": {
            "user_id": "integer (required)",
            "token": "string (required) - FCM device token",
            "platform": "string (required) - android|ios|web"
          },
          "example_request": {
            "user_id": 123,
            "token": "fGc1eR2..._device_token_here",
            "platform": "android"
          }
        },
        {
          "method": "GET",
          "url": "/device-tokens/{userId}",
          "description": "Get all device tokens for a user",
          "example_response": {
            "success": true,
            "data": [
              {
                "id": 1,
                "user_id": 123,
                "token": "fGc1eR2..._device_token_here",
                "platform": "android",
                "expires_at": "2025-02-02T10:30:00.000000Z",
                "created_at": "2025-08-02T10:30:00.000000Z",
                "updated_at": "2025-08-02T10:30:00.000000Z"
              }
            ]
          }
        }
      ]
    },
    "frontend_integration": {
      "firebase_config": {
        "description": "Frontend Firebase configuration needed",
        "config_object": {
          "apiKey": "your-api-key",
          "authDomain": "mozoqr-7d32c.firebaseapp.com",
          "projectId": "mozoqr-7d32c",
          "storageBucket": "mozoqr-7d32c.appspot.com",
          "messagingSenderId": "your-sender-id",
          "appId": "your-app-id"
        }
      },
      "implementation_steps": [
        {
          "step": 1,
          "description": "Install Firebase SDK",
          "flutter_command": "flutter pub add firebase_messaging",
          "web_command": "npm install firebase"
        },
        {
          "step": 2,
          "description": "Request notification permissions",
          "flutter_example": "await FirebaseMessaging.instance.requestPermission();",
          "web_example": "await Notification.requestPermission();"
        },
        {
          "step": 3,
          "description": "Get FCM token",
          "flutter_example": "String? token = await FirebaseMessaging.instance.getToken();",
          "web_example": "const token = await getToken(messaging, { vapidKey: 'your-vapid-key' });"
        },
        {
          "step": 4,
          "description": "Send token to backend",
          "api_call": "POST /api/device-token",
          "payload": {
            "user_id": "current_user_id",
            "token": "fcm_token_from_step_3",
            "platform": "android|ios|web"
          }
        },
        {
          "step": 5,
          "description": "Handle foreground messages",
          "flutter_example": "FirebaseMessaging.onMessage.listen((RemoteMessage message) { /* Handle message */ });",
          "web_example": "onMessage(messaging, (payload) => { /* Handle message */ });"
        },
        {
          "step": 6,
          "description": "Handle background messages",
          "flutter_example": "FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);",
          "web_example": "Register service worker for background notifications"
        }
      ]
    },
    "notification_types": {
      "standard_notification": {
        "description": "Basic notification with title and body",
        "shows_in": ["notification_bar", "foreground_popup"],
        "example": {
          "title": "Nuevo pedido",
          "body": "Mesa 5 ha realizado un pedido"
        }
      },
      "data_notification": {
        "description": "Silent notification with custom data payload",
        "shows_in": ["handled_by_app_logic"],
        "example": {
          "data": {
            "type": "table_call",
            "table_id": "5",
            "action": "waiter_needed"
          }
        }
      },
      "combined_notification": {
        "description": "Notification with both display and data",
        "shows_in": ["notification_bar", "app_handles_data"],
        "example": {
          "title": "Mesa 5 necesita atención",
          "body": "Toca para ver detalles",
          "data": {
            "type": "table_call",
            "table_id": "5"
          }
        }
      }
    },
    "testing": {
      "test_endpoints": [
        {
          "name": "Test notification to all users",
          "endpoint": "POST /api/admin/notifications/send-to-all",
          "test_payload": {
            "title": "🧪 Notificación de prueba",
            "body": "Esta es una notificación de prueba para todos los usuarios",
            "data": {
              "type": "test",
              "timestamp": "2025-08-02T10:30:00Z"
            }
          }
        },
        {
          "name": "Test notification to specific user",
          "endpoint": "POST /api/admin/notifications/send-to-user",
          "test_payload": {
            "user_id": 1,
            "title": "🎯 Notificación personalizada",
            "body": "Esta notificación es solo para ti",
            "data": {
              "type": "personal_test",
              "user_specific": true
            }
          }
        }
      ]
    },
    "error_handling": {
      "common_errors": [
        {
          "error": "No device tokens found",
          "http_code": 404,
          "solution": "User needs to register device token first"
        },
        {
          "error": "Invalid FCM token",
          "http_code": 400,
          "solution": "Token may be expired, request new token from device"
        },
        {
          "error": "Firebase authentication failed",
          "http_code": 500,
          "solution": "Check Firebase service account credentials and project configuration"
        }
      ]
    },
    "environment_setup": {
      "required_env_variables": [
        "FIREBASE_PROJECT_ID=mozoqr-7d32c",
        "FIREBASE_SERVER_KEY=your_firebase_server_key_here"
      ],
      "firebase_service_account": {
        "location": "storage/app/firebase/mozoqr-7d32c-firebase-adminsdk-fbsvc-0a90bdb0a0.json",
        "description": "Service account JSON file for server-to-server authentication"
      }
    },
    "platform_specific": {
      "android": {
        "notification_channels": "Automatically handled by FCM",
        "sound": "default",
        "click_action": "FLUTTER_NOTIFICATION_CLICK"
      },
      "ios": {
        "badge": "Automatically incremented",
        "sound": "default",
        "content_available": true
      },
      "web": {
        "vapid_key": "Required for web push notifications",
        "service_worker": "Required for background notifications"
      }
    }
  }
}